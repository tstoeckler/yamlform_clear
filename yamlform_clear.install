<?php

/**
 * @file
 * Contains install, uninstall, and update hooks for YAML Form Clear module.
 */

/**
 * Implements hook_install().
 */
function yamlform_clear_install() {
  /** @var \Drupal\Core\Entity\EntityLastInstalledSchemaRepositoryInterface $last_installed_schema_repository */
  $last_installed_schema_repository = \Drupal::service('entity.last_installed_schema.repository');
  $entity_type_manager = \Drupal::entityTypeManager();
  $entity_definition_update_manager = \Drupal::entityDefinitionUpdateManager();

  // Uninstall the entity type with the previous storage handler.
  $entity_type_id = 'yamlform_submission';
  $original_entity_type = $last_installed_schema_repository->getLastInstalledDefinition($entity_type_id);
  $original_storage_class = $original_entity_type->getStorageClass();
  /** @var \Drupal\Core\Entity\Sql\SqlContentEntityStorage $original_storage */
  $original_storage = $entity_type_manager->createHandlerInstance($original_storage_class, $original_entity_type);
  $original_storage->onEntityTypeDelete($original_entity_type);

  // Now install the entity type with the new storage handler.
  $entity_type = $entity_type_manager->getDefinition($entity_type_id);
  $entity_definition_update_manager->installEntityType($entity_type);

  // Remove any views that query contact messages.
  if (\Drupal::moduleHandler()->moduleExists('views')) {
    /** @var \Drupal\views\ViewEntityInterface $view */
    foreach ($entity_type_manager->getStorage('view')->loadMultiple() as $view) {
      if ($view->get('base_table') === 'yamlform_submission') {
        $view->delete();
      }
    }
  }
}
